name: CI

env:
  DOT_ENV: ./env

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install prerequisites
        run: |
          sudo apt-get install gcc libkrb5-dev
          sudo pip install docker docker-squash cekit odcs[client]       
          sudo curl -L https://github.com/aelsabbahy/goss/releases/latest/download/goss-linux-amd64 -o /usr/local/bin/goss
          sudo curl -L https://github.com/aelsabbahy/goss/releases/latest/download/dgoss -o /usr/local/bin/dgoss
          sudo chmod +rx /usr/local/bin/goss
          sudo chmod +rx /usr/local/bin/dgoss

      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Import environment variables from a file
        id: import-env
        shell: bash
        run: |
          while read line; do
            echo "$line" >> $GITHUB_ENV
          done < ${{ env.DOT_ENV }}

      - name: Build and test image
        run: "make all-ci"

      - name: Checkout the activemq-artemis-operator
        run: git clone https://github.com/artemiscloud/activemq-artemis-operator.git ${{ runner.temp }}/activemq-artemis-operator

      - name: Execute the test suite  
        uses: artemiscloud/activemq-artemis-operator-test-action@v1
        with:
          repository: 'https://github.com/brusdev/activemq-artemis-operator-test-suite.git'
          ref: 'dev'
          test-packages: 'test/smoke/basic/...'
          docker-images: 'activemq-artemis-broker-kubernetes'
          broker-image: 'activemq-artemis-broker-kubernetes'
          broker-update-image: 'activemq-artemis-broker-kubernetes'
          operator-deploy-path: '${{ runner.temp }}/activemq-artemis-operator/deploy'

      - name: Push the image
        if: ${{ github.event_name == 'push' }}
        run: |
          export IMAGE_TAG=dev.$(date +%Y%m%d).$(git rev-parse --short "$GITHUB_SHA")
          docker login quay.io --username=${{ secrets.QUAY_USERNAME }} --password-stdin <<< ${{ secrets.QUAY_PASSWORD }}
          docker tag $IMAGE_BROKER_KUBERNETES quay.io/$NAMESPACE/$IMAGE_BROKER_KUBERNETES:$IMAGE_TAG
          docker tag $IMAGE_BROKER_KUBERNETES quay.io/$NAMESPACE/$IMAGE_BROKER_KUBERNETES:dev.latest
          docker push quay.io/$NAMESPACE/$IMAGE_BROKER_KUBERNETES:$IMAGE_TAG
          docker push quay.io/$NAMESPACE/$IMAGE_BROKER_KUBERNETES:dev.latest
        env:
          REPOSITORY: quay.io
          NAMESPACE: ${{ secrets.QUAY_NAMESPACE }}

      - uses: actions/upload-artifact@v2
        with:
          name: Test results (JUnit)
          path: validate_results.junit.xml
